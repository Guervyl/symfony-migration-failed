<?php

namespace App\EventListener;

use Doctrine\ORM\Event\LifecycleEventArgs;
use Doctrine\ORM\Event\PreUpdateEventArgs;
use App\Service\FileUploader;
use Symfony\Component\HttpFoundation\File\UploadedFile;

/**
 * Generated by Guervyl Website Builder
 *
 * @author Guerby Duval
 */
class SimpleFormUploadListener {

    /**
     * @var FileUploader
     */
    private $uploader;
    
    /**
     * @var SimpleForm
     */
    private $entity;

    private $imgExtra;


    public function __construct(FileUploader $uploader, $imgExtra = "") {
        $this->uploader = $uploader;
        $this->imgExtra = $imgExtra;

    }
    
    public function prePersist(\App\Entity\SimpleForm $simpleForm, LifecycleEventArgs $args) {
        $this->entity = $simpleForm;
        $this->upload();
    }
    
    public function preUpdate(\App\Entity\SimpleForm $simpleForm, PreUpdateEventArgs $args) {
        $this->entity = $simpleForm;
        $this->upload();
    }
    
    public function upload() {
        // upload only works for Product entities
        if (!$this->entity instanceof \App\Entity\SimpleForm) {
            return;
        }

        $fileImg = $this->entity->getImg();
                    
        // only upload new files
        if ($fileImg instanceof UploadedFile) {
            $fileImgName = $this->uploader->upload($fileImg, $this->imgExtra);
            $this->entity->setImg($fileImgName);
        }


    }
}
